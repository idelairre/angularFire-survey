{"version":3,"sources":["webpack:///app.bundle.js","webpack:///./app/app.js","webpack:///./app/app.js?86a9","webpack:///./app/directives/btnRadio.js","webpack:///./app/directives/btnRadio.js?374a","webpack:///./app/components.js","webpack:///./app/components.js?8c13","webpack:///./app/components/edit/edit.js","webpack:///./app/components/edit/edit.js?9a71","webpack:///./app/components/edit/edit.html","webpack:///./app/components/login/login.js","webpack:///./app/components/login/login.js?b62d","webpack:///./app/components/login/login.html","webpack:///./app/components/main/main.js","webpack:///./app/components/main/main.js?6dea","webpack:///./app/components/main/main.html","webpack:///./app/components/survey/survey.html","webpack:///./app/components/nav/nav.js","webpack:///./app/components/nav/nav.js?7df2","webpack:///./app/components/nav/nav.html","webpack:///./app/components/results/results.js","webpack:///./app/components/results/results.js?fe3c","webpack:///./app/constants/constants.js","webpack:///./app/constants/constants.js?6792","webpack:///./app/components/results/results.html","webpack:///./app/components/survey/survey.js","webpack:///./app/components/survey/survey.js?a4d8","webpack:///./app/routes/routes.js","webpack:///./app/routes/routes.js?63f3","webpack:///./app/services/services.js","webpack:///./app/services/services.js?e7bd"],"names":["webpackJsonp","0","module","exports","__webpack_require__","298","_interopRequireDefault","obj","__esModule","default","_angular","_angular2","_btnRadio","_components","_components2","_routes","_routes2","_services","_services2","_angularUiRouter","_angularUiRouter2","config","run","$rootScope","$location","Auth","$onAuthStateChanged","authData","logout","$signOut","path","$on","event","next","previous","error","editableOptions","theme","301","Object","defineProperty","value","btnRadio","directive","activeClass","toggleEvent","require","link","scope","element","attrs","ngModelCtrl","$render","toggleClass","equals","$modelValue","$eval","bind","hasClass","$apply","$setViewValue","302","_edit","_edit2","_login","_login2","_main","_main2","_nav","_nav2","_results","_results2","_survey","_survey2","components","name","303","_firebase","_firebase2","edit","component","template","controller","$scope","$state","$firebaseArray","questions","database","ref","child","labels","editLabel","label","$save","addLabel","$add","removeLabel","$remove","questionData","options","number","undefined","getNumber","num","Array","remove","item","addQuestions","then","addOption","question","map","q","push","saveOption","index","data","$id","set","items","status","isopen","toggleDropdown","$event","preventDefault","stopPropagation","310","311","login","loginText","console","log","email","password","$signInWithEmailAndPassword","setTimeout","go","312","313","main","$uibModal","successInfo","takeSurvey","modalInstance","open","animation","ariaLabelledBy","ariaDescribedBy","size","result","314","315","316","nav","$getAuth","firebaseUser","uid","317","318","_constants","allResults","headings","user","localStorage","getItem","parseAnswers","answers","key","_loop","_key","answer","JSON","parse","forEach","opt","checked","createTally","tally","title","tallyAnswers","parsedQs","calculatePercent","percentages","percent","toFixed","showHighest","highest","highestIndex","highestTitle","entry","indexOf","$loaded","parsedQuestions","$priority","survey","applicant","timestamp","results","length","showIndex","i","319","constants","apiKey","authDomain","databaseURL","storageBucket","320","321","_jquery","$uibModalInstance","buttonText","surveys","Date","getTime","formData","updateRating","rating","addSurvey","setItem","ok","alert","close","cancel","dismiss","323","routes","$stateProvider","$urlRouterProvider","state","url","otherwise","324","_constants2","services","factory","$firebaseAuth","initializeApp"],"mappings":"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","file":"app.bundle.js","sourcesContent":["webpackJsonp([0],{\n\n/***/ 0:\n/***/ function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(1);\n\tmodule.exports = __webpack_require__(298);\n\n\n/***/ },\n\n/***/ 298:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _angular = __webpack_require__(299);\n\t\n\tvar _angular2 = _interopRequireDefault(_angular);\n\t\n\tvar _btnRadio = __webpack_require__(301);\n\t\n\tvar _btnRadio2 = _interopRequireDefault(_btnRadio);\n\t\n\tvar _components = __webpack_require__(302);\n\t\n\tvar _components2 = _interopRequireDefault(_components);\n\t\n\tvar _routes = __webpack_require__(323);\n\t\n\tvar _routes2 = _interopRequireDefault(_routes);\n\t\n\tvar _services = __webpack_require__(324);\n\t\n\tvar _services2 = _interopRequireDefault(_services);\n\t\n\tvar _angularUiRouter = __webpack_require__(325);\n\t\n\tvar _angularUiRouter2 = _interopRequireDefault(_angularUiRouter);\n\t\n\t__webpack_require__(304);\n\t\n\t__webpack_require__(326);\n\t\n\t__webpack_require__(328);\n\t\n\t__webpack_require__(330);\n\t\n\t__webpack_require__(332);\n\t\n\t__webpack_require__(333);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t_angular2.default.module('pollingApp', ['xeditable', 'ngAnimate', 'ngSanitize', 'ui.bootstrap', _angularUiRouter2.default, _components2.default, _services2.default]).config(_routes2.default).run(['$rootScope', '$location', 'Auth', function ($rootScope, $location, Auth) {\n\t  // any time auth status updates, add auth data to rootScope\n\t  Auth.$onAuthStateChanged(function (authData) {\n\t    $rootScope.authData = authData;\n\t  });\n\t\n\t  $rootScope.logout = function () {\n\t    Auth.$signOut();\n\t    $location.path('/survey');\n\t  };\n\t\n\t  $rootScope.$on('$routeChangeError', function (event, next, previous, error) {\n\t    if (error === 'AUTH_REQUIRED') {\n\t      $location.path('/survey');\n\t    }\n\t  });\n\t}]).run(function (editableOptions) {\n\t  editableOptions.theme = 'bs3'; // bootstrap3 theme. Can be also 'bs2', 'default'\n\t});\n\n/***/ },\n\n/***/ 301:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _angular = __webpack_require__(299);\n\t\n\tvar _angular2 = _interopRequireDefault(_angular);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar btnRadio = _angular2.default.module('pollingApp.directives', ['ngRoute'])\n\t\n\t/**\r\n\t * btnRadio directive\r\n\t * angular-ui/bootstrap/src/buttons\r\n\t * @copyright Angular-UI team 2014\r\n\t */\n\t\n\t.directive('btnRadio', [function () {\n\t    var activeClass = 'active';\n\t    var toggleEvent = 'click';\n\t\n\t    return {\n\t        require: 'ngModel',\n\t        link: function link(scope, element, attrs, ngModelCtrl) {\n\t\n\t            //model -> UI\n\t            ngModelCtrl.$render = function () {\n\t                element.toggleClass(activeClass, _angular2.default.equals(ngModelCtrl.$modelValue, scope.$eval(attrs.btnRadio)));\n\t            };\n\t\n\t            //ui->model\n\t            element.bind(toggleEvent, function () {\n\t                if (!element.hasClass(activeClass)) {\n\t                    scope.$apply(function () {\n\t                        ngModelCtrl.$setViewValue(scope.$eval(attrs.btnRadio));\n\t                        ngModelCtrl.$render();\n\t                    });\n\t                }\n\t            });\n\t        }\n\t    };\n\t}]);\n\t\n\texports.default = btnRadio;\n\n/***/ },\n\n/***/ 302:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _angular = __webpack_require__(299);\n\t\n\tvar _angular2 = _interopRequireDefault(_angular);\n\t\n\tvar _edit = __webpack_require__(303);\n\t\n\tvar _edit2 = _interopRequireDefault(_edit);\n\t\n\tvar _login = __webpack_require__(311);\n\t\n\tvar _login2 = _interopRequireDefault(_login);\n\t\n\tvar _main = __webpack_require__(313);\n\t\n\tvar _main2 = _interopRequireDefault(_main);\n\t\n\tvar _nav = __webpack_require__(316);\n\t\n\tvar _nav2 = _interopRequireDefault(_nav);\n\t\n\tvar _results = __webpack_require__(318);\n\t\n\tvar _results2 = _interopRequireDefault(_results);\n\t\n\tvar _survey = __webpack_require__(321);\n\t\n\tvar _survey2 = _interopRequireDefault(_survey);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar components = _angular2.default.module('components', [_edit2.default, _login2.default, _main2.default, _nav2.default, _results2.default, _survey2.default]).name;\n\t\n\texports.default = components;\n\n/***/ },\n\n/***/ 303:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _angular = __webpack_require__(299);\n\t\n\tvar _angular2 = _interopRequireDefault(_angular);\n\t\n\tvar _firebase = __webpack_require__(304);\n\t\n\tvar _firebase2 = _interopRequireDefault(_firebase);\n\t\n\t__webpack_require__(306);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar edit = _angular2.default.module('edit', []).component('editComponent', {\n\t    template: __webpack_require__(310),\n\t    controller: function controller($scope, $state, $firebaseArray) {\n\t        /* @ngInject */\n\t        var ref = _firebase2.default.database().ref().child('survey');\n\t        var questions = _firebase2.default.database().ref().child('questions');\n\t        var labels = _firebase2.default.database().ref().child('labels');\n\t\n\t        $scope.labels = $firebaseArray(labels);\n\t\n\t        $scope.editLabel = function (label) {\n\t            $scope.labels.$save(label);\n\t        };\n\t\n\t        $scope.addLabel = function (label) {\n\t            $scope.labels.$add(label);\n\t        };\n\t\n\t        $scope.removeLabel = function (label) {\n\t            $scope.labels.$remove(label);\n\t        };\n\t\n\t        $scope.questions = $firebaseArray(questions);\n\t\n\t        $scope.questionData = {\n\t            name: '',\n\t            options: []\n\t        };\n\t\n\t        $scope.options = {\n\t            number: undefined\n\t        };\n\t\n\t        $scope.getNumber = function (num) {\n\t            return new Array(num);\n\t        };\n\t\n\t        $scope.remove = function (item) {\n\t            $scope.questions.$remove(item);\n\t        };\n\t\n\t        $scope.addQuestions = function () {\n\t            $scope.questions.$add($scope.questionData).then(function () {\n\t                $scope.questionData = {\n\t                    name: '',\n\t                    options: []\n\t                };\n\t            });\n\t        };\n\t\n\t        $scope.addOption = function (question) {\n\t            $scope.questions.map(function (q) {\n\t                if (q.name === question) {\n\t                    if (!q.options) {\n\t                        q.options = [];\n\t                        $scope.questions.$save(q);\n\t                    }\n\t                    q.options.push('click to edit question');\n\t                    $scope.questions.$save(q);\n\t                }\n\t            });\n\t        };\n\t\n\t        $scope.saveOption = function (question, index, data) {\n\t            questions.child(question.$id).child('options/' + index).set(data);\n\t        };\n\t\n\t        $scope.items = ['text input', 'text box', 'checkbox', 'radio', 'rating/scale'];\n\t\n\t        $scope.status = {\n\t            isopen: false\n\t        };\n\t\n\t        $scope.toggleDropdown = function ($event) {\n\t            $event.preventDefault();\n\t            $event.stopPropagation();\n\t            $scope.status.isopen = !$scope.status.isopen;\n\t        };\n\t    }\n\t}).name;\n\t\n\texports.default = edit;\n\n/***/ },\n\n/***/ 310:\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=\\\"container\\\">\\r\\n    <div class=\\\"container\\\">\\r\\n        <h2 class=\\\"modal-title\\\">Answer types</h2>\\r\\n        <hr>\\r\\n        <div class=\\\"input-group\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Add label...\\\" ng-model=\\\"label.title\\\">\\r\\n            <span class=\\\"input-group-btn\\\"><button class=\\\"btn btn-default\\\" type=\\\"button\\\" ng-click=\\\"addLabel(label)\\\">add</button></span>\\r\\n        </div>\\r\\n        <!-- /input-group -->\\r\\n        <br>\\r\\n        <div class=\\\"panel panel-default\\\">\\r\\n            <ul class=\\\"list-group\\\">\\r\\n                <li class=\\\"list-group-item\\\" ng-repeat=\\\"label in labels\\\" editable-text=\\\"label.title\\\" onaftersave=\\\"labels.$save(label)\\\">{{ $index }}: {{ label.title }}<a class=\\\"pull-right\\\" ng-click=\\\"removeLabel(label)\\\"><span class=\\\"glyphicon glyphicon-remove\\\"></span></a></li>\\r\\n            </ul>\\r\\n        </div>\\r\\n        <hr>\\r\\n        <h2 class=\\\"modal-title\\\">Answer Pictures</h2>\\r\\n        <hr>\\r\\n        <div class=\\\"media\\\" ng-repeat=\\\"label in labels\\\">\\r\\n            <div class=\\\"media-left media-middle\\\">\\r\\n                <a href=\\\"#\\\">\\r\\n                    <img class=\\\"media-object\\\" height=\\\"100\\\" width=\\\"100\\\" ng-src=\\\"{{ label.img || 'http://rs901.pbsrc.com/albums/ac215/KenkoKimche/Random%20Gif/Pyong%20Gifs/Wave.gif~c200' }}\\\" alt=\\\"...\\\">\\r\\n                </a>\\r\\n            </div>\\r\\n            <div class=\\\"media-body\\\">\\r\\n                <h4 class=\\\"media-heading\\\">{{ label.title }}</h4>\\r\\n                <div class=\\\"input-group\\\">\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Add image src...\\\" ng-model=\\\"label.img\\\">\\r\\n                    <span class=\\\"input-group-btn\\\"><button class=\\\"btn btn-default\\\" type=\\\"button\\\" ng-click=\\\"editLabel(label)\\\">set</button></span>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <hr ng-if=\\\"questions.length > 0\\\">\\r\\n    <div class=\\\"container\\\" ng-if=\\\"questions.length > 0\\\">\\r\\n        <h2 class=\\\"modal-title\\\">Survey Questions</h2>\\r\\n        <hr>\\r\\n        <div class=\\\"panel panel-default\\\" ng-repeat=\\\"question in questions track by $index\\\">\\r\\n            <div class=\\\"panel-heading\\\" editable-text=\\\"question.name\\\" onaftersave=\\\"questions.$save(question)\\\">Question: \\\"{{ question.name }}\\\"<a class=\\\"pull-right\\\" ng-click=\\\"remove(question)\\\"><span class=\\\"glyphicon glyphicon-remove\\\"></span></a></div>\\r\\n            <div class=\\\"panel-body\\\">\\r\\n                <span uib-dropdown>\\r\\n              <a href uib-dropdown-toggle>\\r\\n                type: {{ question.type }}\\r\\n              </a>\\r\\n              <ul class=\\\"dropdown-menu\\\" uib-dropdown-menu>\\r\\n                <li ng-repeat=\\\"choice in items\\\">\\r\\n                  <a href ng-click=\\\"question.type = choice; questions.$save(question); question.options = []; questions.$save(question)\\\">{{ choice }}</a>\\r\\n                </li>\\r\\n              </ul>\\r\\n            </span>\\r\\n                <font ng-if=\\\"qustion.scale\\\"> scale: {{ question.scale }}</font>\\r\\n            </div>\\r\\n            <div class=\\\"panel-footer\\\" ng-if=\\\"question.type === 'radio' || question.type === 'checkbox'\\\">Options:<a class=\\\"pull-right\\\" ng-click=\\\"addOption(question.name)\\\"><span class=\\\"glyphicon glyphicon-plus\\\"></span></a></div>\\r\\n            <ul class=\\\"list-group\\\" ng-if=\\\"question.type === 'radio' || question.type === 'checkbox'\\\">\\r\\n                <li class=\\\"list-group-item\\\" ng-repeat=\\\"option in question.options track by $index\\\"><font editable-text=\\\"option.name\\\" onaftersave=\\\"saveOption(question, $index, $data)\\\">{{ $index + 1 }}: {{ option.name }}</font>\\r\\n                    <span class=\\\"badge\\\" uib-dropdown>\\r\\n                  <a href uib-dropdown-toggle style=\\\"text-decoration: none; color: white\\\">\\r\\n                    {{ option.label || 'click to set answer type' }}\\r\\n                  </a>\\r\\n                  <ul class=\\\"dropdown-menu\\\" uib-dropdown-menu>\\r\\n                    <li ng-repeat=\\\"label in labels\\\">\\r\\n                      <a href ng-click=\\\"option.label = label.title; questions.$save(question)\\\">{{ label.title }}</a>\\r\\n                    </li>\\r\\n                  </ul>\\r\\n                </span>\\r\\n                </li>\\r\\n            </ul>\\r\\n        </div>\\r\\n    </div>\\r\\n    <hr>\\r\\n    <div class=\\\"container\\\">\\r\\n        <h2 class=\\\"modal-title\\\">Add Questions</h2>\\r\\n        <hr>\\r\\n        <!-- input box -->\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <label>Question Name</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"name\\\" ng-model=\\\"questionData.name\\\">\\r\\n        </div>\\r\\n        <fieldset>\\r\\n            <label>Question Type</label>\\r\\n            <div class=\\\"radio\\\">\\r\\n                <label>\\r\\n                    <input type=\\\"radio\\\" name=\\\"optionsRadios\\\" value=\\\"text\\\" ng-model=\\\"questionData.type\\\">text input (short answer)\\r\\n                </label>\\r\\n            </div>\\r\\n            <div class=\\\"radio\\\">\\r\\n                <label>\\r\\n                    <input type=\\\"radio\\\" name=\\\"optionsRadios\\\" value=\\\"textbox\\\" ng-model=\\\"questionData.type\\\">text box (long answer)\\r\\n                </label>\\r\\n            </div>\\r\\n            <div class=\\\"radio\\\">\\r\\n                <label>\\r\\n                    <input type=\\\"radio\\\" name=\\\"optionsRadios\\\" value=\\\"checkbox\\\" ng-model=\\\"questionData.type\\\">checkboxes (multiple choices/multiple answers)\\r\\n                </label>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\" ng-if=\\\"questionData.type == 'checkbox'\\\">\\r\\n                <label>number of options</label>\\r\\n                <input type=\\\"number\\\" class=\\\"form-control\\\" placeholder=\\\"from 0 to ?\\\" ng-model=\\\"options.number\\\" min=\\\"2\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\" ng-repeat=\\\"i in getNumber(options.number) track by $index\\\" ng-if=\\\"questionData.type == 'checkbox'\\\">\\r\\n                <label>option {{ $index + 1 }} name</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"option name\\\" ng-model=\\\"questionData.options[$index]\\\">\\r\\n            </div>\\r\\n            <div class=\\\"radio\\\">\\r\\n                <label>\\r\\n                    <input type=\\\"radio\\\" name=\\\"optionsRadios\\\" value=\\\"radio\\\" ng-model=\\\"questionData.type\\\">radio buttions (multiple choices/single answer)\\r\\n                </label>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\" ng-if=\\\"questionData.type == 'radio'\\\">\\r\\n                <label>number of options</label>\\r\\n                <input type=\\\"number\\\" class=\\\"form-control\\\" placeholder=\\\"from 0 to ?\\\" ng-model=\\\"options.number\\\" min=\\\"2\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\" ng-repeat=\\\"i in getNumber(options.number) track by $index\\\" ng-if=\\\"questionData.type == 'radio' && questionData.options\\\">\\r\\n                <label>option {{ $index + 1 }} name</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"option name\\\" ng-model=\\\"questionData.options[$index].name\\\">\\r\\n            </div>\\r\\n            <div class=\\\"radio\\\">\\r\\n                <label>\\r\\n                    <input type=\\\"radio\\\" name=\\\"optionsRadios\\\" value=\\\"rating\\\" ng-model=\\\"questionData.type\\\">rating/scale\\r\\n                </label>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\" ng-if=\\\"questionData.type == 'rating'\\\">\\r\\n                <label>rating scale</label>\\r\\n                <input type=\\\"number\\\" class=\\\"form-control\\\" placeholder=\\\"from 0 to ?\\\" ng-model=\\\"questionData.scale\\\" min=\\\"0\\\">\\r\\n            </div>\\r\\n        </fieldset>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" id=\\\"addButton\\\" data-loading-text=\\\"Sending...\\\" ng-click=\\\"addQuestions()\\\">Add question</button>\\r\\n    </div>\\r\\n    <hr>\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-primary btn-lg pull-right\\\" ui-sref=\\\"main\\\">Done</button>\\r\\n    <br>\\r\\n</div>\\r\\n\"\n\n/***/ },\n\n/***/ 311:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _angular = __webpack_require__(299);\n\t\n\tvar _angular2 = _interopRequireDefault(_angular);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar login = _angular2.default.module('login', []).component('loginComponent', {\n\t    template: __webpack_require__(312),\n\t    controller: function controller($scope, $state, Auth) {\n\t        /* @ngInject */\n\t        $scope.loginText = 'Sign in';\n\t\n\t        /**\r\n\t         * Login into app and redirect to result page\r\n\t         */\n\t        $scope.login = function () {\n\t            console.log($scope.email);\n\t            console.log($scope.password);\n\t            $scope.authData = null;\n\t            $scope.error = null;\n\t\n\t            // change button to loading state\n\t            $scope.loginText = 'Loading...';\n\t\n\t            // authentication using an email / password combination\n\t            Auth.$signInWithEmailAndPassword($scope.email, $scope.password).then(function (authData) {\n\t                // the data contains all auth info\n\t                $scope.authData = authData;\n\t                // reset button loading state\n\t                $scope.loginText = 'Sign in successful';\n\t                setTimeout($state.go('edit'), 700);\n\t            }).catch(function (error) {\n\t                // catch and display error if login fails\n\t                $scope.error = error;\n\t                // reset button loading state\n\t                $scope.loginText = 'Sign in';\n\t            });\n\t        };\n\t    }\n\t}).name;\n\t\n\texports.default = login;\n\n/***/ },\n\n/***/ 312:\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=\\\"container\\\">\\r\\n  <h2>Login Page</h2>\\r\\n\\r\\n  <hr>\\r\\n\\r\\n  <form class=\\\"form-horizontal\\\" role=\\\"form\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"inputEmail\\\" class=\\\"col-lg-2 control-label\\\">Email</label>\\r\\n          <div class=\\\"col-lg-4\\\">\\r\\n              <input type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"inputEmail\\\" placeholder=\\\"Email\\\" ng-model=\\\"email\\\">\\r\\n          </div>\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"inputPassword\\\" class=\\\"col-lg-2 control-label\\\">Password</label>\\r\\n          <div class=\\\"col-lg-4\\\">\\r\\n              <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"inputPassword\\\" placeholder=\\\"Password\\\" ng-model=\\\"password\\\">\\r\\n          </div>\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n          <div class=\\\"col-lg-offset-2 col-lg-10\\\">\\r\\n              <button type=\\\"submit\\\" class=\\\"btn btn-default\\\" id=\\\"loginButton\\\" ng-click=\\\"login()\\\">{{ loginText }}</button>\\r\\n          </div>\\r\\n      </div>\\r\\n      <p ng-show=\\\"error\\\" class=\\\"alert alert-warning\\\">{{error}}</p>\\r\\n  </form>\\r\\n</div>\\r\\n\"\n\n/***/ },\n\n/***/ 313:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _angular = __webpack_require__(299);\n\t\n\tvar _angular2 = _interopRequireDefault(_angular);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar main = _angular2.default.module('main', ['ui.bootstrap', 'nav', 'survey']).component('mainComponent', {\n\t    template: __webpack_require__(314),\n\t    controller: function controller($scope, $uibModal) {\n\t        /* @ngInject */\n\t\n\t        // hide success information/alert\n\t        $scope.successInfo = false;\n\t\n\t        // open survey modal dialog\n\t        $scope.takeSurvey = function () {\n\t            var modalInstance = $uibModal.open({\n\t                animation: true,\n\t                ariaLabelledBy: 'survey',\n\t                ariaDescribedBy: 'modal-body',\n\t                template: __webpack_require__(315),\n\t                controller: 'surveyController',\n\t                size: 'lg'\n\t            });\n\t            modalInstance.result.then(function () {}, function () {});\n\t        };\n\t    }\n\t}).name;\n\t\n\texports.default = main;\n\n/***/ },\n\n/***/ 314:\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=\\\"container\\\">\\r\\n    <div class=\\\"jumbotron\\\">\\r\\n        <h1>AngularFire Survey</h1>\\r\\n        <hr>\\r\\n        <ul>\\r\\n            <li>An open source online survey tool.</li>\\r\\n            <li>Based on AngularFire, AngularJS, Bootstrap and Firebase.</li>\\r\\n            <li>Easy to set up without worrying about server code.</li>\\r\\n        </ul>\\r\\n\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary btn-lg pull-right\\\" ng-click=\\\"takeSurvey()\\\" ng-hide=\\\"successInfo\\\">Take the Survey</button>\\r\\n        <br>\\r\\n    </div>\\r\\n    <!-- success information/alert -->\\r\\n    <div class=\\\"alert alert-success alert-dismissable\\\" ng-show=\\\"successInfo\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\" aria-hidden=\\\"true\\\">&times;</button>\\r\\n        <strong>Thank you for your feedback!</strong>.\\r\\n    </div>\\r\\n</div>\\r\\n\"\n\n/***/ },\n\n/***/ 315:\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<!-- survey detail modal dialog -->\\r\\n<div class=\\\"modal-content\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\">&times;</button>\\r\\n        <h4 class=\\\"modal-title\\\">Survey Questions</h4>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n        <label>Enter your name</label>\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"formData.applicant\\\">\\r\\n        <hr>\\r\\n        <form class=\\\"\\\" ng-repeat=\\\"question in questions\\\" ng-init=\\\"questionIndex = $index\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label>{{ $index + 1 }}: {{ question.name }}</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"{{ question.name }}\\\" ng-model=\\\"formData[question.name]\\\" ng-if=\\\"question.type == 'text'\\\">\\r\\n                <textarea class=\\\"form-control\\\" rows=\\\"2\\\" name=\\\"{{ question.name }}\\\" ng-model=\\\"formData[question.name]\\\" ng-if=\\\"question.type == 'textbox'\\\"></textarea>\\r\\n                <div ng-repeat=\\\"option in question.options\\\" ng-if=\\\"question.options && question.type == 'checkbox'\\\">\\r\\n                    <label class=\\\"checkbox-inline\\\">\\r\\n                        <input type=\\\"checkbox\\\" id=\\\"inlineCheckbox{{ $index }}\\\" name=\\\"{{ question.name }}\\\" value=\\\"{{ option }}\\\" ng-model=\\\"formData[question.name]\\\" ng-true-value=\\\"'{{ option }}'\\\" ng-false-value=\\\"'nil'\\\"> {{ option }}\\r\\n                    </label>\\r\\n                </div>\\r\\n                <div ng-repeat=\\\"option in question.options\\\" name=\\\"{{ question.name }}\\\" ng-if=\\\"question.options && question.type == 'radio'\\\">\\r\\n                    <label class=\\\"checkbox-inline\\\">\\r\\n                        <input type=\\\"radio\\\" id=\\\"inlineRadio{{ $index }}\\\" name=\\\"{{ question.name }}\\\" value=\\\"{{ option }}\\\" ng-model=\\\"formData[question.name]\\\" ng-true-value=\\\"'{{ option }}'\\\"> {{ option.name }}\\r\\n                    </label>\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\" ng-if=\\\"question.type == 'rating'\\\">\\r\\n                    <rating ng-model=\\\"formData[question.name]\\\" max=\\\"{{ question.scale }}\\\" readonly=\\\"isReadonly\\\" on-hover=\\\"hoveringOver(value)\\\" on-leave=\\\"overStar = null\\\" titles=\\\"['one','two','three']\\\"></rating>\\r\\n                </div>\\r\\n            </div>\\r\\n        </form>\\r\\n        <div class=\\\"modal-footer\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-default\\\" ng-click=\\\"cancel()\\\">Close</button>\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" id=\\\"addButton\\\" ng-click=\\\"addSurvey()\\\">{{ buttonText }}</button>\\r\\n        </div>\\r\\n        <!-- /.modal-content -->\\r\\n    </div>\\r\\n    <!-- /.modal-dialog -->\\r\\n</div>\\r\\n<!-- /.modal -->\\r\\n\"\n\n/***/ },\n\n/***/ 316:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _angular = __webpack_require__(299);\n\t\n\tvar _angular2 = _interopRequireDefault(_angular);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar nav = _angular2.default.module('nav', ['firebase']).component('navComponent', {\n\t  template: __webpack_require__(317),\n\t  controller: function controller($scope, Auth) {\n\t    /* @ngInject */\n\t    $scope.authData = Auth.$getAuth();\n\t\n\t    Auth.$onAuthStateChanged(function (firebaseUser) {\n\t      if (firebaseUser) {\n\t        $scope.authData = firebaseUser.uid;\n\t      } else {\n\t        $scope.authData = null;\n\t      }\n\t    });\n\t\n\t    $scope.logout = function () {\n\t      Auth.$signOut();\n\t    };\n\t  }\n\t}).name;\n\t\n\texports.default = nav;\n\n/***/ },\n\n/***/ 317:\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<!-- Navigation -->\\r\\n<nav class=\\\"navbar navbar-default\\\" role=\\\"navigation\\\">\\r\\n   <div class=\\\"container\\\">\\r\\n      <div class=\\\"navbar-header\\\">\\r\\n         <button type=\\\"button\\\" class=\\\"navbar-toggle\\\" data-toggle=\\\"collapse\\\" data-target=\\\".navbar-ex1-collapse\\\">\\r\\n            <span class=\\\"sr-only\\\">Toggle navigation</span>\\r\\n            <span class=\\\"icon-bar\\\"></span>\\r\\n            <span class=\\\"icon-bar\\\"></span>\\r\\n            <span class=\\\"icon-bar\\\"></span>\\r\\n         </button>\\r\\n         <a class=\\\"navbar-brand\\\" ui-sref=\\\"main\\\">AngularFire Survey</a>\\r\\n      </div>\\r\\n\\r\\n       <ul class=\\\"nav navbar-nav\\\">\\r\\n          <li ng-show=\\\"authData\\\"><a ui-sref=\\\"edit\\\">Edit the Survey</a>\\r\\n          </li>\\r\\n          <li ng-show=\\\"authData\\\"><a ui-sref=\\\"result\\\" disabled>Survey Result</a>\\r\\n          </li>\\r\\n       </ul>\\r\\n       <ul class=\\\"nav navbar-nav navbar-right\\\">\\r\\n          <li ng-hide=\\\"authData\\\" class=\\\"active\\\"><a ui-sref=\\\"login\\\">Login</a>\\r\\n          </li>\\r\\n          <li ng-show=\\\"authData\\\"><a href ng-click=\\\"logout()\\\">Logout</a>\\r\\n          </li>\\r\\n       </ul>\\r\\n      <!-- /.navbar-collapse -->\\r\\n   </div>\\r\\n   <!-- /.container -->\\r\\n</nav>\\r\\n\"\n\n/***/ },\n\n/***/ 318:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _angular = __webpack_require__(299);\n\t\n\tvar _angular2 = _interopRequireDefault(_angular);\n\t\n\tvar _constants = __webpack_require__(319);\n\t\n\tvar _constants2 = _interopRequireDefault(_constants);\n\t\n\tvar _firebase = __webpack_require__(304);\n\t\n\tvar _firebase2 = _interopRequireDefault(_firebase);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar result = _angular2.default.module('result', []).component('resultComponent', {\n\t    template: __webpack_require__(320),\n\t    controller: function controller($scope, $firebaseArray) {\n\t        /* @ngInject */\n\t\n\t        var allResults = _firebase2.default.database().ref().child('survey'); // download the data into local object\n\t        var questions = _firebase2.default.database().ref().child('questions');\n\t        var labels = _firebase2.default.database().ref().child('labels');\n\t\n\t        $scope.labels = $firebaseArray(labels);\n\t\n\t        $scope.allResults = $firebaseArray(allResults);\n\t        $scope.headings = $firebaseArray(questions);\n\t\n\t        $scope.user = localStorage.getItem('lastUser');\n\t\n\t        var parseAnswers = function parseAnswers(answers, questions) {\n\t            for (var key in answers) {\n\t                var _loop = function _loop(_key) {\n\t                    var question = questions[_key];\n\t                    var answer = JSON.parse(answers[key]).name;\n\t                    if (question.name === key) {\n\t                        question.options.forEach(function (opt) {\n\t                            if (opt.name === answer) {\n\t                                opt.checked = true;\n\t                            }\n\t                        });\n\t                    }\n\t                };\n\t\n\t                for (var _key in questions) {\n\t                    _loop(_key);\n\t                }\n\t            }\n\t        };\n\t\n\t        var createTally = function createTally() {\n\t            var tally = {};\n\t            $scope.labels.forEach(function (label) {\n\t                tally[label.title] = 0;\n\t            });\n\t            return tally;\n\t        };\n\t\n\t        var tallyAnswers = function tallyAnswers(parsedQs) {\n\t            var tally = createTally();\n\t            for (var key in parsedQs) {\n\t                var options = parsedQs[key].options;\n\t\n\t                for (var _key in options) {\n\t                    if (options[_key].checked) {\n\t                        tally[options[_key].label] += 1;\n\t                    }\n\t                }\n\t            }\n\t            return tally;\n\t        };\n\t\n\t        var calculatePercent = function calculatePercent(tally, questions) {\n\t            var percentages = {};\n\t            for (var key in tally) {\n\t                var percent = (tally[key] / questions * 100).toFixed(2);\n\t                percentages[key] = percent;\n\t            }\n\t            return percentages;\n\t        };\n\t\n\t        var showHighest = function showHighest(percentages) {\n\t            var labels = $scope.labels.map(function (label) {\n\t                return label.title;\n\t            });\n\t            var highest = 0;\n\t            var highestIndex = 0;\n\t            var highestTitle = '';\n\t            for (var key in percentages) {\n\t                var entry = percentages[key];\n\t                if (entry > highest) {\n\t                    highest = entry;\n\t                    highestTitle = key;\n\t                    highestIndex = labels.indexOf(key);\n\t                }\n\t            }\n\t            return {\n\t                highest: highest,\n\t                title: highestTitle,\n\t                index: highestIndex\n\t            };\n\t        };\n\t\n\t        $scope.headings.$loaded().then(function () {\n\t            var parsedQuestions = {};\n\t            for (var key in $scope.headings) {\n\t                if (typeof $scope.headings[key] !== 'function') {\n\t                    parsedQuestions[key] = $scope.headings[key];\n\t                    delete parsedQuestions[key].$id;\n\t                    delete parsedQuestions[key].$priority;\n\t                    parsedQuestions[key].options = parsedQuestions[key].options.map(function (opt) {\n\t                        return {\n\t                            label: opt.label,\n\t                            name: opt.name,\n\t                            checked: false\n\t                        };\n\t                    });\n\t                }\n\t            }\n\t\n\t            $scope.allResults.$loaded().then(function () {\n\t                $scope.allResults.forEach(function (survey) {\n\t                    if (survey.applicant === $scope.user) {\n\t                        delete survey.applicant;\n\t                        delete survey.timestamp;\n\t                        delete survey.$id;\n\t                        delete survey.$priority;\n\t\n\t                        parseAnswers(survey, parsedQuestions);\n\t\n\t                        $scope.results = parsedQuestions;\n\t\n\t                        $scope.tally = tallyAnswers(parsedQuestions);\n\t\n\t                        $scope.percentages = calculatePercent($scope.tally, $scope.headings.length);\n\t\n\t                        $scope.highest = showHighest($scope.percentages);\n\t                    }\n\t                });\n\t            });\n\t        });\n\t\n\t        $scope.showIndex = function (item) {\n\t            for (var i = 0; i < item.options.length; i += 1) {\n\t                if (item.options[i].checked) {\n\t                    return i;\n\t                }\n\t            }\n\t        };\n\t    }\n\t}).name;\n\t\n\texports.default = result;\n\n/***/ },\n\n/***/ 319:\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t// your Firebase URL goes here\n\tvar constants = {\n\t  apiKey: 'AIzaSyBxgACRnMbApl7nH5uApDQrSW5vjy4r9Tw',\n\t  authDomain: 'torid-fire-2372.firebaseapp.com',\n\t  databaseURL: 'https://torid-fire-2372.firebaseio.com',\n\t  storageBucket: 'torid-fire-2372.appspot.com'\n\t};\n\t\n\texports.default = constants;\n\n/***/ },\n\n/***/ 320:\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=\\\"container\\\">\\r\\n  <h2>Survey Result</h2>\\r\\n  <hr>\\r\\n  <h3>You got...</h3>\\r\\n  <h1 style=\\\"text-align: center\\\">\\\"{{ highest.title }}\\\"</h1>\\r\\n  <br>\\r\\n  <img class=\\\"center-block\\\" ng-src=\\\"{{ labels[highest.index].img }}\\\" />\\r\\n\\r\\n  <!-- <table class=\\\"table table-hover\\\">\\r\\n      <tr>\\r\\n          <th ng-repeat=\\\"header in headings\\\">{{ header.name }}</th>\\r\\n      </tr>\\r\\n      <tr ng-repeat=\\\"result in allResults | orderBy: '-timestamp'\\\">\\r\\n          <td ng-repeat=\\\"header in headings\\\">{{ header.options.indexOf(result[header.name]) }} : {{result[header.name]}}</td>\\r\\n      </tr>\\r\\n  </table> -->\\r\\n\\r\\n  <h1>{{ user }}'s answers:</h1>\\r\\n\\r\\n  <table class=\\\"table table-hover\\\">\\r\\n      <tr>\\r\\n          <th ng-repeat=\\\"label in labels\\\">{{ label.title }}</th>\\r\\n      </tr>\\r\\n      <tr>\\r\\n          <td ng-repeat=\\\"(key, val) in percentages\\\">% {{ val }}</td>\\r\\n      </tr>\\r\\n  </table>\\r\\n</div>\\r\\n\"\n\n/***/ },\n\n/***/ 321:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _jquery = __webpack_require__(322);\n\t\n\tvar _jquery2 = _interopRequireDefault(_jquery);\n\t\n\tvar _angular = __webpack_require__(299);\n\t\n\tvar _angular2 = _interopRequireDefault(_angular);\n\t\n\tvar _firebase = __webpack_require__(304);\n\t\n\tvar _firebase2 = _interopRequireDefault(_firebase);\n\t\n\tvar _constants = __webpack_require__(319);\n\t\n\tvar _constants2 = _interopRequireDefault(_constants);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar survey = _angular2.default.module('survey', []).controller('surveyController', ['$scope', '$state', '$firebaseArray', '$uibModalInstance', function ($scope, $state, $firebaseArray, $uibModalInstance) {\n\t    /* @ngInject */\n\t\n\t    var ref = _firebase2.default.database().ref().child('survey');\n\t    var questions = _firebase2.default.database().ref().child('questions');\n\t\n\t    $scope.buttonText = 'Send results';\n\t\n\t    $scope.questions = $firebaseArray(questions);\n\t\n\t    // create a synchronized array\n\t    $scope.surveys = $firebaseArray(ref);\n\t\n\t    // timestamp\n\t    $scope.timestamp = new Date().getTime();\n\t\n\t    // store data in this object\n\t    // and set default values\n\t    $scope.formData = {\n\t        timestamp: $scope.timestamp\n\t    };\n\t\n\t    /**\r\n\t     * Update rating score to object.\r\n\t     * @param {Number} rating - Star rating score.\r\n\t     */\n\t    $scope.updateRating = function (rating) {\n\t        $scope.formData.rating = rating;\n\t    };\n\t\n\t    /**\r\n\t     * Add survey to Firebase database.\r\n\t     */\n\t    $scope.addSurvey = function () {\n\t        if ($scope.formData) {\n\t            // change button to loading state\n\t            localStorage.setItem('lastUser', $scope.formData.applicant);\n\t\n\t            $scope.buttonText = 'loading...';\n\t\n\t            // push data to Firebase\n\t            $scope.surveys.$add($scope.formData).then(function () {\n\t                // show success information/alert\n\t                $scope.successInfo = true;\n\t                $scope.buttonText = 'Send result';\n\t                setTimeout($scope.ok, 300);\n\t            });\n\t        } else {\n\t            alert('Please complete all questions before submitting.');\n\t        }\n\t    };\n\t\n\t    $scope.ok = function () {\n\t        $uibModalInstance.close();\n\t        $state.go('result');\n\t    };\n\t\n\t    $scope.cancel = function () {\n\t        $uibModalInstance.dismiss('cancel');\n\t    };\n\t}]).name;\n\t\n\texports.default = survey;\n\n/***/ },\n\n/***/ 323:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _angular = __webpack_require__(299);\n\t\n\tvar _angular2 = _interopRequireDefault(_angular);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar routes = function routes($stateProvider, $urlRouterProvider) {\n\t  /* @ngInject */\n\t\n\t  $stateProvider.state('login', {\n\t    url: '/login',\n\t    component: 'loginComponent'\n\t  });\n\t\n\t  $stateProvider.state('edit', {\n\t    url: '/edit',\n\t    component: 'editComponent'\n\t  });\n\t\n\t  $stateProvider.state('main', {\n\t    url: '/main',\n\t    component: 'mainComponent'\n\t  });\n\t\n\t  $stateProvider.state('result', {\n\t    url: '/result',\n\t    component: 'resultComponent'\n\t  });\n\t\n\t  $urlRouterProvider.otherwise('main');\n\t};\n\t\n\texports.default = routes;\n\n/***/ },\n\n/***/ 324:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _angular = __webpack_require__(299);\n\t\n\tvar _angular2 = _interopRequireDefault(_angular);\n\t\n\tvar _constants = __webpack_require__(319);\n\t\n\tvar _constants2 = _interopRequireDefault(_constants);\n\t\n\tvar _firebase = __webpack_require__(304);\n\t\n\tvar _firebase2 = _interopRequireDefault(_firebase);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar services = _angular2.default.module('services', ['firebase']).factory('Auth', ['$firebaseAuth', function ($firebaseAuth) {\n\t    _firebase2.default.initializeApp(_constants2.default);\n\t    return $firebaseAuth();\n\t}]).name;\n\t\n\texports.default = services;\n\n/***/ }\n\n});\n\n\n/** WEBPACK FOOTER **\n ** app.bundle.js\n **/","'use strict';\n\nvar _angular = require('angular');\n\nvar _angular2 = _interopRequireDefault(_angular);\n\nvar _btnRadio = require('./directives/btnRadio');\n\nvar _btnRadio2 = _interopRequireDefault(_btnRadio);\n\nvar _components = require('./components');\n\nvar _components2 = _interopRequireDefault(_components);\n\nvar _routes = require('./routes/routes');\n\nvar _routes2 = _interopRequireDefault(_routes);\n\nvar _services = require('./services/services');\n\nvar _services2 = _interopRequireDefault(_services);\n\nvar _angularUiRouter = require('angular-ui-router');\n\nvar _angularUiRouter2 = _interopRequireDefault(_angularUiRouter);\n\nrequire('firebase');\n\nrequire('angularfire');\n\nrequire('angular-ui-bootstrap');\n\nrequire('angular-animate');\n\nrequire('angular-xeditable');\n\nrequire('angular-sanitize');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n_angular2.default.module('pollingApp', ['xeditable', 'ngAnimate', 'ngSanitize', 'ui.bootstrap', _angularUiRouter2.default, _components2.default, _services2.default]).config(_routes2.default).run(['$rootScope', '$location', 'Auth', function ($rootScope, $location, Auth) {\n  // any time auth status updates, add auth data to rootScope\n  Auth.$onAuthStateChanged(function (authData) {\n    $rootScope.authData = authData;\n  });\n\n  $rootScope.logout = function () {\n    Auth.$signOut();\n    $location.path('/survey');\n  };\n\n  $rootScope.$on('$routeChangeError', function (event, next, previous, error) {\n    if (error === 'AUTH_REQUIRED') {\n      $location.path('/survey');\n    }\n  });\n}]).run(function (editableOptions) {\n  editableOptions.theme = 'bs3'; // bootstrap3 theme. Can be also 'bs2', 'default'\n});\n\n\n/** WEBPACK FOOTER **\n ** ./app/app.js\n **/","import angular from 'angular';\r\nimport btnRadio from './directives/btnRadio';\r\nimport components from './components';\r\nimport routes from './routes/routes';\r\nimport services from './services/services';\r\nimport uiRouter from 'angular-ui-router';\r\nimport 'firebase';\r\nimport 'angularfire';\r\nimport 'angular-ui-bootstrap';\r\nimport 'angular-animate';\r\nimport 'angular-xeditable';\r\nimport 'angular-sanitize';\r\n\r\nangular.module('pollingApp', ['xeditable', 'ngAnimate', 'ngSanitize', 'ui.bootstrap', uiRouter, components, services])\r\n\r\n.config(routes)\r\n\r\n.run(['$rootScope', '$location', 'Auth',\r\n  function($rootScope, $location, Auth) {\r\n    // any time auth status updates, add auth data to rootScope\r\n    Auth.$onAuthStateChanged(function(authData) {\r\n      $rootScope.authData = authData;\r\n    });\r\n\r\n    $rootScope.logout = function() {\r\n      Auth.$signOut();\r\n      $location.path('/survey');\r\n    };\r\n\r\n    $rootScope.$on('$routeChangeError', function(event, next, previous, error) {\r\n      if (error === 'AUTH_REQUIRED') {\r\n          $location.path('/survey');\r\n      }\r\n    });\r\n  }\r\n])\r\n\r\n.run(function(editableOptions) {\r\n  editableOptions.theme = 'bs3'; // bootstrap3 theme. Can be also 'bs2', 'default'\r\n});\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./app/app.js\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _angular = require('angular');\n\nvar _angular2 = _interopRequireDefault(_angular);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar btnRadio = _angular2.default.module('pollingApp.directives', ['ngRoute'])\n\n/**\r\n * btnRadio directive\r\n * angular-ui/bootstrap/src/buttons\r\n * @copyright Angular-UI team 2014\r\n */\n\n.directive('btnRadio', [function () {\n    var activeClass = 'active';\n    var toggleEvent = 'click';\n\n    return {\n        require: 'ngModel',\n        link: function link(scope, element, attrs, ngModelCtrl) {\n\n            //model -> UI\n            ngModelCtrl.$render = function () {\n                element.toggleClass(activeClass, _angular2.default.equals(ngModelCtrl.$modelValue, scope.$eval(attrs.btnRadio)));\n            };\n\n            //ui->model\n            element.bind(toggleEvent, function () {\n                if (!element.hasClass(activeClass)) {\n                    scope.$apply(function () {\n                        ngModelCtrl.$setViewValue(scope.$eval(attrs.btnRadio));\n                        ngModelCtrl.$render();\n                    });\n                }\n            });\n        }\n    };\n}]);\n\nexports.default = btnRadio;\n\n\n/** WEBPACK FOOTER **\n ** ./app/directives/btnRadio.js\n **/","import angular from 'angular';\r\n\r\nconst btnRadio = angular.module('pollingApp.directives', ['ngRoute'])\r\n\r\n/**\r\n * btnRadio directive\r\n * angular-ui/bootstrap/src/buttons\r\n * @copyright Angular-UI team 2014\r\n */\r\n\r\n.directive('btnRadio', [function() {\r\n    var activeClass = 'active';\r\n    var toggleEvent = 'click';\r\n\r\n    return {\r\n        require: 'ngModel',\r\n        link: function(scope, element, attrs, ngModelCtrl) {\r\n\r\n            //model -> UI\r\n            ngModelCtrl.$render = function() {\r\n                element.toggleClass(activeClass, angular.equals(ngModelCtrl.$modelValue, scope.$eval(attrs.btnRadio)));\r\n            };\r\n\r\n            //ui->model\r\n            element.bind(toggleEvent, function() {\r\n                if (!element.hasClass(activeClass)) {\r\n                    scope.$apply(function() {\r\n                        ngModelCtrl.$setViewValue(scope.$eval(attrs.btnRadio));\r\n                        ngModelCtrl.$render();\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n}]);\r\n\r\nexport default btnRadio;\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./app/directives/btnRadio.js\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _angular = require('angular');\n\nvar _angular2 = _interopRequireDefault(_angular);\n\nvar _edit = require('./components/edit/edit');\n\nvar _edit2 = _interopRequireDefault(_edit);\n\nvar _login = require('./components/login/login');\n\nvar _login2 = _interopRequireDefault(_login);\n\nvar _main = require('./components/main/main');\n\nvar _main2 = _interopRequireDefault(_main);\n\nvar _nav = require('./components/nav/nav');\n\nvar _nav2 = _interopRequireDefault(_nav);\n\nvar _results = require('./components/results/results');\n\nvar _results2 = _interopRequireDefault(_results);\n\nvar _survey = require('./components/survey/survey');\n\nvar _survey2 = _interopRequireDefault(_survey);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar components = _angular2.default.module('components', [_edit2.default, _login2.default, _main2.default, _nav2.default, _results2.default, _survey2.default]).name;\n\nexports.default = components;\n\n\n/** WEBPACK FOOTER **\n ** ./app/components.js\n **/","import angular from 'angular';\r\nimport edit from './components/edit/edit';\r\nimport login from './components/login/login';\r\nimport main from './components/main/main';\r\nimport nav from './components/nav/nav';\r\nimport results from './components/results/results';\r\nimport survey from './components/survey/survey';\r\n\r\nconst components = angular.module('components', [edit, login, main, nav, results, survey])\r\n\r\n.name;\r\n\r\nexport default components;\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./app/components.js\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _angular = require('angular');\n\nvar _angular2 = _interopRequireDefault(_angular);\n\nvar _firebase = require('firebase');\n\nvar _firebase2 = _interopRequireDefault(_firebase);\n\nrequire('angular-xeditable/dist/css/xeditable.css');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar edit = _angular2.default.module('edit', []).component('editComponent', {\n    template: require('./edit.html'),\n    controller: function controller($scope, $state, $firebaseArray) {\n        /* @ngInject */\n        var ref = _firebase2.default.database().ref().child('survey');\n        var questions = _firebase2.default.database().ref().child('questions');\n        var labels = _firebase2.default.database().ref().child('labels');\n\n        $scope.labels = $firebaseArray(labels);\n\n        $scope.editLabel = function (label) {\n            $scope.labels.$save(label);\n        };\n\n        $scope.addLabel = function (label) {\n            $scope.labels.$add(label);\n        };\n\n        $scope.removeLabel = function (label) {\n            $scope.labels.$remove(label);\n        };\n\n        $scope.questions = $firebaseArray(questions);\n\n        $scope.questionData = {\n            name: '',\n            options: []\n        };\n\n        $scope.options = {\n            number: undefined\n        };\n\n        $scope.getNumber = function (num) {\n            return new Array(num);\n        };\n\n        $scope.remove = function (item) {\n            $scope.questions.$remove(item);\n        };\n\n        $scope.addQuestions = function () {\n            $scope.questions.$add($scope.questionData).then(function () {\n                $scope.questionData = {\n                    name: '',\n                    options: []\n                };\n            });\n        };\n\n        $scope.addOption = function (question) {\n            $scope.questions.map(function (q) {\n                if (q.name === question) {\n                    if (!q.options) {\n                        q.options = [];\n                        $scope.questions.$save(q);\n                    }\n                    q.options.push('click to edit question');\n                    $scope.questions.$save(q);\n                }\n            });\n        };\n\n        $scope.saveOption = function (question, index, data) {\n            questions.child(question.$id).child('options/' + index).set(data);\n        };\n\n        $scope.items = ['text input', 'text box', 'checkbox', 'radio', 'rating/scale'];\n\n        $scope.status = {\n            isopen: false\n        };\n\n        $scope.toggleDropdown = function ($event) {\n            $event.preventDefault();\n            $event.stopPropagation();\n            $scope.status.isopen = !$scope.status.isopen;\n        };\n    }\n}).name;\n\nexports.default = edit;\n\n\n/** WEBPACK FOOTER **\n ** ./app/components/edit/edit.js\n **/","import angular from 'angular';\r\nimport firebase from 'firebase';\r\nimport 'angular-xeditable/dist/css/xeditable.css';\r\n\r\nconst edit = angular.module('edit', []).component('editComponent', {\r\n    template: require('./edit.html'),\r\n    controller: function($scope, $state, $firebaseArray) {\r\n        /* @ngInject */\r\n        const ref = firebase.database().ref().child('survey');\r\n        const questions = firebase.database().ref().child('questions');\r\n        const labels = firebase.database().ref().child('labels');\r\n\r\n        $scope.labels = $firebaseArray(labels);\r\n\r\n        $scope.editLabel = label => {\r\n            $scope.labels.$save(label);\r\n        };\r\n\r\n        $scope.addLabel = label => {\r\n            $scope.labels.$add(label);\r\n        };\r\n\r\n        $scope.removeLabel = label => {\r\n            $scope.labels.$remove(label);\r\n        }\r\n\r\n        $scope.questions = $firebaseArray(questions);\r\n\r\n        $scope.questionData = {\r\n            name: '',\r\n            options: []\r\n        };\r\n\r\n        $scope.options = {\r\n            number: undefined\r\n        };\r\n\r\n        $scope.getNumber = num => {\r\n            return new Array(num);\r\n        };\r\n\r\n        $scope.remove = item => {\r\n            $scope.questions.$remove(item);\r\n        };\r\n\r\n        $scope.addQuestions = () => {\r\n            $scope.questions.$add($scope.questionData).then(() => {\r\n                $scope.questionData = {\r\n                    name: '',\r\n                    options: []\r\n                };\r\n            });\r\n        };\r\n\r\n        $scope.addOption = question => {\r\n            $scope.questions.map(q => {\r\n                if (q.name === question) {\r\n                    if (!q.options) {\r\n                        q.options = [];\r\n                        $scope.questions.$save(q);\r\n                    }\r\n                    q.options.push('click to edit question');\r\n                    $scope.questions.$save(q);\r\n                }\r\n            });\r\n        }\r\n\r\n        $scope.saveOption = (question, index, data) => {\r\n            questions.child(question.$id).child(`options/${index}`).set(data);\r\n        }\r\n\r\n        $scope.items = [\r\n            'text input',\r\n            'text box',\r\n            'checkbox',\r\n            'radio',\r\n            'rating/scale'\r\n        ];\r\n\r\n        $scope.status = {\r\n            isopen: false\r\n        };\r\n\r\n        $scope.toggleDropdown = $event => {\r\n            $event.preventDefault();\r\n            $event.stopPropagation();\r\n            $scope.status.isopen = !$scope.status.isopen;\r\n        };\r\n    }\r\n})\r\n\r\n.name;\r\n\r\nexport default edit;\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./app/components/edit/edit.js\n **/","module.exports = \"<div class=\\\"container\\\">\\r\\n    <div class=\\\"container\\\">\\r\\n        <h2 class=\\\"modal-title\\\">Answer types</h2>\\r\\n        <hr>\\r\\n        <div class=\\\"input-group\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Add label...\\\" ng-model=\\\"label.title\\\">\\r\\n            <span class=\\\"input-group-btn\\\"><button class=\\\"btn btn-default\\\" type=\\\"button\\\" ng-click=\\\"addLabel(label)\\\">add</button></span>\\r\\n        </div>\\r\\n        <!-- /input-group -->\\r\\n        <br>\\r\\n        <div class=\\\"panel panel-default\\\">\\r\\n            <ul class=\\\"list-group\\\">\\r\\n                <li class=\\\"list-group-item\\\" ng-repeat=\\\"label in labels\\\" editable-text=\\\"label.title\\\" onaftersave=\\\"labels.$save(label)\\\">{{ $index }}: {{ label.title }}<a class=\\\"pull-right\\\" ng-click=\\\"removeLabel(label)\\\"><span class=\\\"glyphicon glyphicon-remove\\\"></span></a></li>\\r\\n            </ul>\\r\\n        </div>\\r\\n        <hr>\\r\\n        <h2 class=\\\"modal-title\\\">Answer Pictures</h2>\\r\\n        <hr>\\r\\n        <div class=\\\"media\\\" ng-repeat=\\\"label in labels\\\">\\r\\n            <div class=\\\"media-left media-middle\\\">\\r\\n                <a href=\\\"#\\\">\\r\\n                    <img class=\\\"media-object\\\" height=\\\"100\\\" width=\\\"100\\\" ng-src=\\\"{{ label.img || 'http://rs901.pbsrc.com/albums/ac215/KenkoKimche/Random%20Gif/Pyong%20Gifs/Wave.gif~c200' }}\\\" alt=\\\"...\\\">\\r\\n                </a>\\r\\n            </div>\\r\\n            <div class=\\\"media-body\\\">\\r\\n                <h4 class=\\\"media-heading\\\">{{ label.title }}</h4>\\r\\n                <div class=\\\"input-group\\\">\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Add image src...\\\" ng-model=\\\"label.img\\\">\\r\\n                    <span class=\\\"input-group-btn\\\"><button class=\\\"btn btn-default\\\" type=\\\"button\\\" ng-click=\\\"editLabel(label)\\\">set</button></span>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <hr ng-if=\\\"questions.length > 0\\\">\\r\\n    <div class=\\\"container\\\" ng-if=\\\"questions.length > 0\\\">\\r\\n        <h2 class=\\\"modal-title\\\">Survey Questions</h2>\\r\\n        <hr>\\r\\n        <div class=\\\"panel panel-default\\\" ng-repeat=\\\"question in questions track by $index\\\">\\r\\n            <div class=\\\"panel-heading\\\" editable-text=\\\"question.name\\\" onaftersave=\\\"questions.$save(question)\\\">Question: \\\"{{ question.name }}\\\"<a class=\\\"pull-right\\\" ng-click=\\\"remove(question)\\\"><span class=\\\"glyphicon glyphicon-remove\\\"></span></a></div>\\r\\n            <div class=\\\"panel-body\\\">\\r\\n                <span uib-dropdown>\\r\\n              <a href uib-dropdown-toggle>\\r\\n                type: {{ question.type }}\\r\\n              </a>\\r\\n              <ul class=\\\"dropdown-menu\\\" uib-dropdown-menu>\\r\\n                <li ng-repeat=\\\"choice in items\\\">\\r\\n                  <a href ng-click=\\\"question.type = choice; questions.$save(question); question.options = []; questions.$save(question)\\\">{{ choice }}</a>\\r\\n                </li>\\r\\n              </ul>\\r\\n            </span>\\r\\n                <font ng-if=\\\"qustion.scale\\\"> scale: {{ question.scale }}</font>\\r\\n            </div>\\r\\n            <div class=\\\"panel-footer\\\" ng-if=\\\"question.type === 'radio' || question.type === 'checkbox'\\\">Options:<a class=\\\"pull-right\\\" ng-click=\\\"addOption(question.name)\\\"><span class=\\\"glyphicon glyphicon-plus\\\"></span></a></div>\\r\\n            <ul class=\\\"list-group\\\" ng-if=\\\"question.type === 'radio' || question.type === 'checkbox'\\\">\\r\\n                <li class=\\\"list-group-item\\\" ng-repeat=\\\"option in question.options track by $index\\\"><font editable-text=\\\"option.name\\\" onaftersave=\\\"saveOption(question, $index, $data)\\\">{{ $index + 1 }}: {{ option.name }}</font>\\r\\n                    <span class=\\\"badge\\\" uib-dropdown>\\r\\n                  <a href uib-dropdown-toggle style=\\\"text-decoration: none; color: white\\\">\\r\\n                    {{ option.label || 'click to set answer type' }}\\r\\n                  </a>\\r\\n                  <ul class=\\\"dropdown-menu\\\" uib-dropdown-menu>\\r\\n                    <li ng-repeat=\\\"label in labels\\\">\\r\\n                      <a href ng-click=\\\"option.label = label.title; questions.$save(question)\\\">{{ label.title }}</a>\\r\\n                    </li>\\r\\n                  </ul>\\r\\n                </span>\\r\\n                </li>\\r\\n            </ul>\\r\\n        </div>\\r\\n    </div>\\r\\n    <hr>\\r\\n    <div class=\\\"container\\\">\\r\\n        <h2 class=\\\"modal-title\\\">Add Questions</h2>\\r\\n        <hr>\\r\\n        <!-- input box -->\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <label>Question Name</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"name\\\" ng-model=\\\"questionData.name\\\">\\r\\n        </div>\\r\\n        <fieldset>\\r\\n            <label>Question Type</label>\\r\\n            <div class=\\\"radio\\\">\\r\\n                <label>\\r\\n                    <input type=\\\"radio\\\" name=\\\"optionsRadios\\\" value=\\\"text\\\" ng-model=\\\"questionData.type\\\">text input (short answer)\\r\\n                </label>\\r\\n            </div>\\r\\n            <div class=\\\"radio\\\">\\r\\n                <label>\\r\\n                    <input type=\\\"radio\\\" name=\\\"optionsRadios\\\" value=\\\"textbox\\\" ng-model=\\\"questionData.type\\\">text box (long answer)\\r\\n                </label>\\r\\n            </div>\\r\\n            <div class=\\\"radio\\\">\\r\\n                <label>\\r\\n                    <input type=\\\"radio\\\" name=\\\"optionsRadios\\\" value=\\\"checkbox\\\" ng-model=\\\"questionData.type\\\">checkboxes (multiple choices/multiple answers)\\r\\n                </label>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\" ng-if=\\\"questionData.type == 'checkbox'\\\">\\r\\n                <label>number of options</label>\\r\\n                <input type=\\\"number\\\" class=\\\"form-control\\\" placeholder=\\\"from 0 to ?\\\" ng-model=\\\"options.number\\\" min=\\\"2\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\" ng-repeat=\\\"i in getNumber(options.number) track by $index\\\" ng-if=\\\"questionData.type == 'checkbox'\\\">\\r\\n                <label>option {{ $index + 1 }} name</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"option name\\\" ng-model=\\\"questionData.options[$index]\\\">\\r\\n            </div>\\r\\n            <div class=\\\"radio\\\">\\r\\n                <label>\\r\\n                    <input type=\\\"radio\\\" name=\\\"optionsRadios\\\" value=\\\"radio\\\" ng-model=\\\"questionData.type\\\">radio buttions (multiple choices/single answer)\\r\\n                </label>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\" ng-if=\\\"questionData.type == 'radio'\\\">\\r\\n                <label>number of options</label>\\r\\n                <input type=\\\"number\\\" class=\\\"form-control\\\" placeholder=\\\"from 0 to ?\\\" ng-model=\\\"options.number\\\" min=\\\"2\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\" ng-repeat=\\\"i in getNumber(options.number) track by $index\\\" ng-if=\\\"questionData.type == 'radio' && questionData.options\\\">\\r\\n                <label>option {{ $index + 1 }} name</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"option name\\\" ng-model=\\\"questionData.options[$index].name\\\">\\r\\n            </div>\\r\\n            <div class=\\\"radio\\\">\\r\\n                <label>\\r\\n                    <input type=\\\"radio\\\" name=\\\"optionsRadios\\\" value=\\\"rating\\\" ng-model=\\\"questionData.type\\\">rating/scale\\r\\n                </label>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\" ng-if=\\\"questionData.type == 'rating'\\\">\\r\\n                <label>rating scale</label>\\r\\n                <input type=\\\"number\\\" class=\\\"form-control\\\" placeholder=\\\"from 0 to ?\\\" ng-model=\\\"questionData.scale\\\" min=\\\"0\\\">\\r\\n            </div>\\r\\n        </fieldset>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" id=\\\"addButton\\\" data-loading-text=\\\"Sending...\\\" ng-click=\\\"addQuestions()\\\">Add question</button>\\r\\n    </div>\\r\\n    <hr>\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-primary btn-lg pull-right\\\" ui-sref=\\\"main\\\">Done</button>\\r\\n    <br>\\r\\n</div>\\r\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./app/components/edit/edit.html\n ** module id = 310\n ** module chunks = 0\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _angular = require('angular');\n\nvar _angular2 = _interopRequireDefault(_angular);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar login = _angular2.default.module('login', []).component('loginComponent', {\n    template: require('./login.html'),\n    controller: function controller($scope, $state, Auth) {\n        /* @ngInject */\n        $scope.loginText = 'Sign in';\n\n        /**\r\n         * Login into app and redirect to result page\r\n         */\n        $scope.login = function () {\n            console.log($scope.email);\n            console.log($scope.password);\n            $scope.authData = null;\n            $scope.error = null;\n\n            // change button to loading state\n            $scope.loginText = 'Loading...';\n\n            // authentication using an email / password combination\n            Auth.$signInWithEmailAndPassword($scope.email, $scope.password).then(function (authData) {\n                // the data contains all auth info\n                $scope.authData = authData;\n                // reset button loading state\n                $scope.loginText = 'Sign in successful';\n                setTimeout($state.go('edit'), 700);\n            }).catch(function (error) {\n                // catch and display error if login fails\n                $scope.error = error;\n                // reset button loading state\n                $scope.loginText = 'Sign in';\n            });\n        };\n    }\n}).name;\n\nexports.default = login;\n\n\n/** WEBPACK FOOTER **\n ** ./app/components/login/login.js\n **/","import angular from 'angular';\r\n\r\nconst login = angular.module('login', []).component('loginComponent', {\r\n    template: require('./login.html'),\r\n    controller: function($scope, $state, Auth) {\r\n        /* @ngInject */\r\n        $scope.loginText = 'Sign in';\r\n\r\n        /**\r\n         * Login into app and redirect to result page\r\n         */\r\n        $scope.login = () => {\r\n            console.log($scope.email);\r\n            console.log($scope.password);\r\n            $scope.authData = null;\r\n            $scope.error = null;\r\n\r\n            // change button to loading state\r\n            $scope.loginText = 'Loading...';\r\n\r\n            // authentication using an email / password combination\r\n            Auth.$signInWithEmailAndPassword($scope.email, $scope.password).then(authData => {\r\n                // the data contains all auth info\r\n                $scope.authData = authData;\r\n                // reset button loading state\r\n                $scope.loginText = 'Sign in successful';\r\n                setTimeout($state.go('edit'), 700);\r\n            }).catch(error => {\r\n                // catch and display error if login fails\r\n                $scope.error = error;\r\n                // reset button loading state\r\n                $scope.loginText = 'Sign in';\r\n            });\r\n        };\r\n    }\r\n})\r\n\r\n.name;\r\n\r\nexport default login;\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./app/components/login/login.js\n **/","module.exports = \"<div class=\\\"container\\\">\\r\\n  <h2>Login Page</h2>\\r\\n\\r\\n  <hr>\\r\\n\\r\\n  <form class=\\\"form-horizontal\\\" role=\\\"form\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"inputEmail\\\" class=\\\"col-lg-2 control-label\\\">Email</label>\\r\\n          <div class=\\\"col-lg-4\\\">\\r\\n              <input type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"inputEmail\\\" placeholder=\\\"Email\\\" ng-model=\\\"email\\\">\\r\\n          </div>\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"inputPassword\\\" class=\\\"col-lg-2 control-label\\\">Password</label>\\r\\n          <div class=\\\"col-lg-4\\\">\\r\\n              <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"inputPassword\\\" placeholder=\\\"Password\\\" ng-model=\\\"password\\\">\\r\\n          </div>\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n          <div class=\\\"col-lg-offset-2 col-lg-10\\\">\\r\\n              <button type=\\\"submit\\\" class=\\\"btn btn-default\\\" id=\\\"loginButton\\\" ng-click=\\\"login()\\\">{{ loginText }}</button>\\r\\n          </div>\\r\\n      </div>\\r\\n      <p ng-show=\\\"error\\\" class=\\\"alert alert-warning\\\">{{error}}</p>\\r\\n  </form>\\r\\n</div>\\r\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./app/components/login/login.html\n ** module id = 312\n ** module chunks = 0\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _angular = require('angular');\n\nvar _angular2 = _interopRequireDefault(_angular);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar main = _angular2.default.module('main', ['ui.bootstrap', 'nav', 'survey']).component('mainComponent', {\n    template: require('./main.html'),\n    controller: function controller($scope, $uibModal) {\n        /* @ngInject */\n\n        // hide success information/alert\n        $scope.successInfo = false;\n\n        // open survey modal dialog\n        $scope.takeSurvey = function () {\n            var modalInstance = $uibModal.open({\n                animation: true,\n                ariaLabelledBy: 'survey',\n                ariaDescribedBy: 'modal-body',\n                template: require('../survey/survey.html'),\n                controller: 'surveyController',\n                size: 'lg'\n            });\n            modalInstance.result.then(function () {}, function () {});\n        };\n    }\n}).name;\n\nexports.default = main;\n\n\n/** WEBPACK FOOTER **\n ** ./app/components/main/main.js\n **/","import angular from 'angular';\r\n\r\nconst main = angular.module('main', ['ui.bootstrap', 'nav', 'survey']).component('mainComponent', {\r\n    template: require('./main.html'),\r\n    controller: function($scope, $uibModal) {\r\n        /* @ngInject */\r\n\r\n        // hide success information/alert\r\n        $scope.successInfo = false;\r\n\r\n        // open survey modal dialog\r\n        $scope.takeSurvey = () => {\r\n            const modalInstance = $uibModal.open({\r\n                animation: true,\r\n                ariaLabelledBy: 'survey',\r\n                ariaDescribedBy: 'modal-body',\r\n                template: require('../survey/survey.html'),\r\n                controller: 'surveyController',\r\n                size: 'lg'\r\n            });\r\n            modalInstance.result.then(function() {}, function() {});\r\n        };\r\n    }\r\n})\r\n\r\n.name;\r\n\r\nexport default main;\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./app/components/main/main.js\n **/","module.exports = \"<div class=\\\"container\\\">\\r\\n    <div class=\\\"jumbotron\\\">\\r\\n        <h1>AngularFire Survey</h1>\\r\\n        <hr>\\r\\n        <ul>\\r\\n            <li>An open source online survey tool.</li>\\r\\n            <li>Based on AngularFire, AngularJS, Bootstrap and Firebase.</li>\\r\\n            <li>Easy to set up without worrying about server code.</li>\\r\\n        </ul>\\r\\n\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary btn-lg pull-right\\\" ng-click=\\\"takeSurvey()\\\" ng-hide=\\\"successInfo\\\">Take the Survey</button>\\r\\n        <br>\\r\\n    </div>\\r\\n    <!-- success information/alert -->\\r\\n    <div class=\\\"alert alert-success alert-dismissable\\\" ng-show=\\\"successInfo\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\" aria-hidden=\\\"true\\\">&times;</button>\\r\\n        <strong>Thank you for your feedback!</strong>.\\r\\n    </div>\\r\\n</div>\\r\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./app/components/main/main.html\n ** module id = 314\n ** module chunks = 0\n **/","module.exports = \"<!-- survey detail modal dialog -->\\r\\n<div class=\\\"modal-content\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\">&times;</button>\\r\\n        <h4 class=\\\"modal-title\\\">Survey Questions</h4>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n        <label>Enter your name</label>\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"formData.applicant\\\">\\r\\n        <hr>\\r\\n        <form class=\\\"\\\" ng-repeat=\\\"question in questions\\\" ng-init=\\\"questionIndex = $index\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label>{{ $index + 1 }}: {{ question.name }}</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"{{ question.name }}\\\" ng-model=\\\"formData[question.name]\\\" ng-if=\\\"question.type == 'text'\\\">\\r\\n                <textarea class=\\\"form-control\\\" rows=\\\"2\\\" name=\\\"{{ question.name }}\\\" ng-model=\\\"formData[question.name]\\\" ng-if=\\\"question.type == 'textbox'\\\"></textarea>\\r\\n                <div ng-repeat=\\\"option in question.options\\\" ng-if=\\\"question.options && question.type == 'checkbox'\\\">\\r\\n                    <label class=\\\"checkbox-inline\\\">\\r\\n                        <input type=\\\"checkbox\\\" id=\\\"inlineCheckbox{{ $index }}\\\" name=\\\"{{ question.name }}\\\" value=\\\"{{ option }}\\\" ng-model=\\\"formData[question.name]\\\" ng-true-value=\\\"'{{ option }}'\\\" ng-false-value=\\\"'nil'\\\"> {{ option }}\\r\\n                    </label>\\r\\n                </div>\\r\\n                <div ng-repeat=\\\"option in question.options\\\" name=\\\"{{ question.name }}\\\" ng-if=\\\"question.options && question.type == 'radio'\\\">\\r\\n                    <label class=\\\"checkbox-inline\\\">\\r\\n                        <input type=\\\"radio\\\" id=\\\"inlineRadio{{ $index }}\\\" name=\\\"{{ question.name }}\\\" value=\\\"{{ option }}\\\" ng-model=\\\"formData[question.name]\\\" ng-true-value=\\\"'{{ option }}'\\\"> {{ option.name }}\\r\\n                    </label>\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\" ng-if=\\\"question.type == 'rating'\\\">\\r\\n                    <rating ng-model=\\\"formData[question.name]\\\" max=\\\"{{ question.scale }}\\\" readonly=\\\"isReadonly\\\" on-hover=\\\"hoveringOver(value)\\\" on-leave=\\\"overStar = null\\\" titles=\\\"['one','two','three']\\\"></rating>\\r\\n                </div>\\r\\n            </div>\\r\\n        </form>\\r\\n        <div class=\\\"modal-footer\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-default\\\" ng-click=\\\"cancel()\\\">Close</button>\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" id=\\\"addButton\\\" ng-click=\\\"addSurvey()\\\">{{ buttonText }}</button>\\r\\n        </div>\\r\\n        <!-- /.modal-content -->\\r\\n    </div>\\r\\n    <!-- /.modal-dialog -->\\r\\n</div>\\r\\n<!-- /.modal -->\\r\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./app/components/survey/survey.html\n ** module id = 315\n ** module chunks = 0\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _angular = require('angular');\n\nvar _angular2 = _interopRequireDefault(_angular);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar nav = _angular2.default.module('nav', ['firebase']).component('navComponent', {\n  template: require('./nav.html'),\n  controller: function controller($scope, Auth) {\n    /* @ngInject */\n    $scope.authData = Auth.$getAuth();\n\n    Auth.$onAuthStateChanged(function (firebaseUser) {\n      if (firebaseUser) {\n        $scope.authData = firebaseUser.uid;\n      } else {\n        $scope.authData = null;\n      }\n    });\n\n    $scope.logout = function () {\n      Auth.$signOut();\n    };\n  }\n}).name;\n\nexports.default = nav;\n\n\n/** WEBPACK FOOTER **\n ** ./app/components/nav/nav.js\n **/","import angular from 'angular';\r\n\r\nconst nav = angular.module('nav', ['firebase']).component('navComponent', {\r\n  template: require('./nav.html'),\r\n  controller: function($scope, Auth) {\r\n    /* @ngInject */\r\n    $scope.authData = Auth.$getAuth();\r\n\r\n    Auth.$onAuthStateChanged(firebaseUser => {\r\n      if (firebaseUser) {\r\n        $scope.authData = firebaseUser.uid;\r\n      } else {\r\n        $scope.authData = null;\r\n      }\r\n    });\r\n\r\n    $scope.logout = () => {\r\n      Auth.$signOut();\r\n    }\r\n  }\r\n})\r\n\r\n.name;\r\n\r\nexport default nav;\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./app/components/nav/nav.js\n **/","module.exports = \"<!-- Navigation -->\\r\\n<nav class=\\\"navbar navbar-default\\\" role=\\\"navigation\\\">\\r\\n   <div class=\\\"container\\\">\\r\\n      <div class=\\\"navbar-header\\\">\\r\\n         <button type=\\\"button\\\" class=\\\"navbar-toggle\\\" data-toggle=\\\"collapse\\\" data-target=\\\".navbar-ex1-collapse\\\">\\r\\n            <span class=\\\"sr-only\\\">Toggle navigation</span>\\r\\n            <span class=\\\"icon-bar\\\"></span>\\r\\n            <span class=\\\"icon-bar\\\"></span>\\r\\n            <span class=\\\"icon-bar\\\"></span>\\r\\n         </button>\\r\\n         <a class=\\\"navbar-brand\\\" ui-sref=\\\"main\\\">AngularFire Survey</a>\\r\\n      </div>\\r\\n\\r\\n       <ul class=\\\"nav navbar-nav\\\">\\r\\n          <li ng-show=\\\"authData\\\"><a ui-sref=\\\"edit\\\">Edit the Survey</a>\\r\\n          </li>\\r\\n          <li ng-show=\\\"authData\\\"><a ui-sref=\\\"result\\\" disabled>Survey Result</a>\\r\\n          </li>\\r\\n       </ul>\\r\\n       <ul class=\\\"nav navbar-nav navbar-right\\\">\\r\\n          <li ng-hide=\\\"authData\\\" class=\\\"active\\\"><a ui-sref=\\\"login\\\">Login</a>\\r\\n          </li>\\r\\n          <li ng-show=\\\"authData\\\"><a href ng-click=\\\"logout()\\\">Logout</a>\\r\\n          </li>\\r\\n       </ul>\\r\\n      <!-- /.navbar-collapse -->\\r\\n   </div>\\r\\n   <!-- /.container -->\\r\\n</nav>\\r\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./app/components/nav/nav.html\n ** module id = 317\n ** module chunks = 0\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _angular = require('angular');\n\nvar _angular2 = _interopRequireDefault(_angular);\n\nvar _constants = require('../../constants/constants');\n\nvar _constants2 = _interopRequireDefault(_constants);\n\nvar _firebase = require('firebase');\n\nvar _firebase2 = _interopRequireDefault(_firebase);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar result = _angular2.default.module('result', []).component('resultComponent', {\n    template: require('./results.html'),\n    controller: function controller($scope, $firebaseArray) {\n        /* @ngInject */\n\n        var allResults = _firebase2.default.database().ref().child('survey'); // download the data into local object\n        var questions = _firebase2.default.database().ref().child('questions');\n        var labels = _firebase2.default.database().ref().child('labels');\n\n        $scope.labels = $firebaseArray(labels);\n\n        $scope.allResults = $firebaseArray(allResults);\n        $scope.headings = $firebaseArray(questions);\n\n        $scope.user = localStorage.getItem('lastUser');\n\n        var parseAnswers = function parseAnswers(answers, questions) {\n            for (var key in answers) {\n                var _loop = function _loop(_key) {\n                    var question = questions[_key];\n                    var answer = JSON.parse(answers[key]).name;\n                    if (question.name === key) {\n                        question.options.forEach(function (opt) {\n                            if (opt.name === answer) {\n                                opt.checked = true;\n                            }\n                        });\n                    }\n                };\n\n                for (var _key in questions) {\n                    _loop(_key);\n                }\n            }\n        };\n\n        var createTally = function createTally() {\n            var tally = {};\n            $scope.labels.forEach(function (label) {\n                tally[label.title] = 0;\n            });\n            return tally;\n        };\n\n        var tallyAnswers = function tallyAnswers(parsedQs) {\n            var tally = createTally();\n            for (var key in parsedQs) {\n                var options = parsedQs[key].options;\n\n                for (var _key in options) {\n                    if (options[_key].checked) {\n                        tally[options[_key].label] += 1;\n                    }\n                }\n            }\n            return tally;\n        };\n\n        var calculatePercent = function calculatePercent(tally, questions) {\n            var percentages = {};\n            for (var key in tally) {\n                var percent = (tally[key] / questions * 100).toFixed(2);\n                percentages[key] = percent;\n            }\n            return percentages;\n        };\n\n        var showHighest = function showHighest(percentages) {\n            var labels = $scope.labels.map(function (label) {\n                return label.title;\n            });\n            var highest = 0;\n            var highestIndex = 0;\n            var highestTitle = '';\n            for (var key in percentages) {\n                var entry = percentages[key];\n                if (entry > highest) {\n                    highest = entry;\n                    highestTitle = key;\n                    highestIndex = labels.indexOf(key);\n                }\n            }\n            return {\n                highest: highest,\n                title: highestTitle,\n                index: highestIndex\n            };\n        };\n\n        $scope.headings.$loaded().then(function () {\n            var parsedQuestions = {};\n            for (var key in $scope.headings) {\n                if (typeof $scope.headings[key] !== 'function') {\n                    parsedQuestions[key] = $scope.headings[key];\n                    delete parsedQuestions[key].$id;\n                    delete parsedQuestions[key].$priority;\n                    parsedQuestions[key].options = parsedQuestions[key].options.map(function (opt) {\n                        return {\n                            label: opt.label,\n                            name: opt.name,\n                            checked: false\n                        };\n                    });\n                }\n            }\n\n            $scope.allResults.$loaded().then(function () {\n                $scope.allResults.forEach(function (survey) {\n                    if (survey.applicant === $scope.user) {\n                        delete survey.applicant;\n                        delete survey.timestamp;\n                        delete survey.$id;\n                        delete survey.$priority;\n\n                        parseAnswers(survey, parsedQuestions);\n\n                        $scope.results = parsedQuestions;\n\n                        $scope.tally = tallyAnswers(parsedQuestions);\n\n                        $scope.percentages = calculatePercent($scope.tally, $scope.headings.length);\n\n                        $scope.highest = showHighest($scope.percentages);\n                    }\n                });\n            });\n        });\n\n        $scope.showIndex = function (item) {\n            for (var i = 0; i < item.options.length; i += 1) {\n                if (item.options[i].checked) {\n                    return i;\n                }\n            }\n        };\n    }\n}).name;\n\nexports.default = result;\n\n\n/** WEBPACK FOOTER **\n ** ./app/components/results/results.js\n **/","import angular from 'angular';\r\nimport constants from '../../constants/constants';\r\nimport firebase from 'firebase';\r\n\r\nconst result = angular.module('result', []).component('resultComponent', {\r\n    template: require('./results.html'),\r\n    controller: function($scope, $firebaseArray) {\r\n        /* @ngInject */\r\n\r\n        const allResults = firebase.database().ref().child('survey'); // download the data into local object\r\n        const questions = firebase.database().ref().child('questions');\r\n        const labels = firebase.database().ref().child('labels');\r\n\r\n        $scope.labels = $firebaseArray(labels);\r\n\r\n        $scope.allResults = $firebaseArray(allResults);\r\n        $scope.headings = $firebaseArray(questions);\r\n\r\n        $scope.user = localStorage.getItem('lastUser');\r\n\r\n        const parseAnswers = (answers, questions) => {\r\n            for (const key in answers) {\r\n                for (const _key in questions) {\r\n                    const question = questions[_key];\r\n                    const answer = JSON.parse(answers[key]).name;\r\n                    if (question.name === key) {\r\n                        question.options.forEach(opt => {\r\n                            if (opt.name === answer) {\r\n                                opt.checked = true;\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        const createTally = () => {\r\n          const tally = {};\r\n          $scope.labels.forEach(label => {\r\n            tally[label.title] = 0;\r\n          });\r\n          return tally;\r\n        }\r\n\r\n        const tallyAnswers = parsedQs => {\r\n            let tally = createTally();\r\n            for (const key in parsedQs) {\r\n                const { options } = parsedQs[key];\r\n                for (const _key in options) {\r\n                  if (options[_key].checked) {\r\n                    tally[options[_key].label] += 1;\r\n                  }\r\n                }\r\n            }\r\n            return tally;\r\n        }\r\n\r\n        const calculatePercent = (tally, questions) => {\r\n            const percentages = {};\r\n            for (const key in tally) {\r\n                const percent = ((tally[key] / questions) * 100).toFixed(2);\r\n                percentages[key] = percent;\r\n            }\r\n            return percentages;\r\n        }\r\n\r\n        const showHighest = percentages => {\r\n            const labels = $scope.labels.map(label => label.title);\r\n            let highest = 0;\r\n            let highestIndex = 0;\r\n            let highestTitle = '';\r\n            for (const key in percentages) {\r\n                const entry = percentages[key];\r\n                if (entry > highest) {\r\n                    highest = entry;\r\n                    highestTitle = key;\r\n                    highestIndex = labels.indexOf(key);\r\n                }\r\n            }\r\n            return {\r\n                highest,\r\n                title: highestTitle,\r\n                index: highestIndex\r\n            };\r\n        }\r\n\r\n        $scope.headings.$loaded().then(() => {\r\n            const parsedQuestions = {};\r\n            for (const key in $scope.headings) {\r\n                if (typeof $scope.headings[key] !== 'function') {\r\n                    parsedQuestions[key] = $scope.headings[key];\r\n                    delete parsedQuestions[key].$id;\r\n                    delete parsedQuestions[key].$priority;\r\n                    parsedQuestions[key].options = parsedQuestions[key].options.map(opt => {\r\n                        return {\r\n                            label: opt.label,\r\n                            name: opt.name,\r\n                            checked: false\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n\r\n            $scope.allResults.$loaded().then(() => {\r\n                $scope.allResults.forEach(survey => {\r\n                    if (survey.applicant === $scope.user) {\r\n                        delete survey.applicant;\r\n                        delete survey.timestamp;\r\n                        delete survey.$id;\r\n                        delete survey.$priority;\r\n\r\n                        parseAnswers(survey, parsedQuestions);\r\n\r\n                        $scope.results = parsedQuestions;\r\n\r\n                        $scope.tally = tallyAnswers(parsedQuestions);\r\n\r\n                        $scope.percentages = calculatePercent($scope.tally, $scope.headings.length);\r\n\r\n                        $scope.highest = showHighest($scope.percentages);\r\n                    }\r\n                });\r\n            });\r\n        });\r\n\r\n        $scope.showIndex = (item) => {\r\n            for (let i = 0; i < item.options.length; i += 1) {\r\n                if (item.options[i].checked) {\r\n                    return i;\r\n                }\r\n            }\r\n        }\r\n    }\r\n})\r\n\r\n.name;\r\n\r\nexport default result;\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./app/components/results/results.js\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n// your Firebase URL goes here\nvar constants = {\n  apiKey: 'AIzaSyBxgACRnMbApl7nH5uApDQrSW5vjy4r9Tw',\n  authDomain: 'torid-fire-2372.firebaseapp.com',\n  databaseURL: 'https://torid-fire-2372.firebaseio.com',\n  storageBucket: 'torid-fire-2372.appspot.com'\n};\n\nexports.default = constants;\n\n\n/** WEBPACK FOOTER **\n ** ./app/constants/constants.js\n **/","// your Firebase URL goes here\r\nconst constants = {\r\n  apiKey: 'AIzaSyBxgACRnMbApl7nH5uApDQrSW5vjy4r9Tw',\r\n  authDomain: 'torid-fire-2372.firebaseapp.com',\r\n  databaseURL: 'https://torid-fire-2372.firebaseio.com',\r\n  storageBucket: 'torid-fire-2372.appspot.com',\r\n};\r\n\r\nexport default constants;\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./app/constants/constants.js\n **/","module.exports = \"<div class=\\\"container\\\">\\r\\n  <h2>Survey Result</h2>\\r\\n  <hr>\\r\\n  <h3>You got...</h3>\\r\\n  <h1 style=\\\"text-align: center\\\">\\\"{{ highest.title }}\\\"</h1>\\r\\n  <br>\\r\\n  <img class=\\\"center-block\\\" ng-src=\\\"{{ labels[highest.index].img }}\\\" />\\r\\n\\r\\n  <!-- <table class=\\\"table table-hover\\\">\\r\\n      <tr>\\r\\n          <th ng-repeat=\\\"header in headings\\\">{{ header.name }}</th>\\r\\n      </tr>\\r\\n      <tr ng-repeat=\\\"result in allResults | orderBy: '-timestamp'\\\">\\r\\n          <td ng-repeat=\\\"header in headings\\\">{{ header.options.indexOf(result[header.name]) }} : {{result[header.name]}}</td>\\r\\n      </tr>\\r\\n  </table> -->\\r\\n\\r\\n  <h1>{{ user }}'s answers:</h1>\\r\\n\\r\\n  <table class=\\\"table table-hover\\\">\\r\\n      <tr>\\r\\n          <th ng-repeat=\\\"label in labels\\\">{{ label.title }}</th>\\r\\n      </tr>\\r\\n      <tr>\\r\\n          <td ng-repeat=\\\"(key, val) in percentages\\\">% {{ val }}</td>\\r\\n      </tr>\\r\\n  </table>\\r\\n</div>\\r\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./app/components/results/results.html\n ** module id = 320\n ** module chunks = 0\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _jquery = require('jquery');\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nvar _angular = require('angular');\n\nvar _angular2 = _interopRequireDefault(_angular);\n\nvar _firebase = require('firebase');\n\nvar _firebase2 = _interopRequireDefault(_firebase);\n\nvar _constants = require('../../constants/constants');\n\nvar _constants2 = _interopRequireDefault(_constants);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar survey = _angular2.default.module('survey', []).controller('surveyController', ['$scope', '$state', '$firebaseArray', '$uibModalInstance', function ($scope, $state, $firebaseArray, $uibModalInstance) {\n    /* @ngInject */\n\n    var ref = _firebase2.default.database().ref().child('survey');\n    var questions = _firebase2.default.database().ref().child('questions');\n\n    $scope.buttonText = 'Send results';\n\n    $scope.questions = $firebaseArray(questions);\n\n    // create a synchronized array\n    $scope.surveys = $firebaseArray(ref);\n\n    // timestamp\n    $scope.timestamp = new Date().getTime();\n\n    // store data in this object\n    // and set default values\n    $scope.formData = {\n        timestamp: $scope.timestamp\n    };\n\n    /**\r\n     * Update rating score to object.\r\n     * @param {Number} rating - Star rating score.\r\n     */\n    $scope.updateRating = function (rating) {\n        $scope.formData.rating = rating;\n    };\n\n    /**\r\n     * Add survey to Firebase database.\r\n     */\n    $scope.addSurvey = function () {\n        if ($scope.formData) {\n            // change button to loading state\n            localStorage.setItem('lastUser', $scope.formData.applicant);\n\n            $scope.buttonText = 'loading...';\n\n            // push data to Firebase\n            $scope.surveys.$add($scope.formData).then(function () {\n                // show success information/alert\n                $scope.successInfo = true;\n                $scope.buttonText = 'Send result';\n                setTimeout($scope.ok, 300);\n            });\n        } else {\n            alert('Please complete all questions before submitting.');\n        }\n    };\n\n    $scope.ok = function () {\n        $uibModalInstance.close();\n        $state.go('result');\n    };\n\n    $scope.cancel = function () {\n        $uibModalInstance.dismiss('cancel');\n    };\n}]).name;\n\nexports.default = survey;\n\n\n/** WEBPACK FOOTER **\n ** ./app/components/survey/survey.js\n **/","import $ from 'jquery';\r\nimport angular from 'angular';\r\nimport firebase from 'firebase';\r\nimport constants from '../../constants/constants';\r\n\r\nconst survey = angular.module('survey', [])\r\n    .controller('surveyController', ['$scope', '$state', '$firebaseArray', '$uibModalInstance',\r\n        function($scope, $state, $firebaseArray, $uibModalInstance) {\r\n          /* @ngInject */\r\n\r\n            const ref = firebase.database().ref().child('survey');\r\n            const questions = firebase.database().ref().child('questions');\r\n\r\n            $scope.buttonText = 'Send results';\r\n\r\n            $scope.questions = $firebaseArray(questions);\r\n\r\n            // create a synchronized array\r\n            $scope.surveys = $firebaseArray(ref);\r\n\r\n            // timestamp\r\n            $scope.timestamp = new Date().getTime();\r\n\r\n            // store data in this object\r\n            // and set default values\r\n            $scope.formData = {\r\n                timestamp: $scope.timestamp\r\n            };\r\n\r\n            /**\r\n             * Update rating score to object.\r\n             * @param {Number} rating - Star rating score.\r\n             */\r\n            $scope.updateRating = function(rating) {\r\n                $scope.formData.rating = rating;\r\n            };\r\n\r\n            /**\r\n             * Add survey to Firebase database.\r\n             */\r\n            $scope.addSurvey = function() {\r\n                if ($scope.formData) {\r\n                    // change button to loading state\r\n                    localStorage.setItem('lastUser', $scope.formData.applicant);\r\n\r\n                    $scope.buttonText = 'loading...';\r\n\r\n                    // push data to Firebase\r\n                    $scope.surveys.$add($scope.formData).then(function() {\r\n                        // show success information/alert\r\n                        $scope.successInfo = true;\r\n                        $scope.buttonText = 'Send result';\r\n                        setTimeout($scope.ok, 300);\r\n                    });\r\n                } else {\r\n                    alert('Please complete all questions before submitting.');\r\n                }\r\n            };\r\n\r\n            $scope.ok = function() {\r\n                $uibModalInstance.close();\r\n                $state.go('result');\r\n            };\r\n\r\n            $scope.cancel = function() {\r\n                $uibModalInstance.dismiss('cancel');\r\n            };\r\n        }\r\n    ])\r\n\r\n.name;\r\n\r\nexport default survey;\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./app/components/survey/survey.js\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _angular = require('angular');\n\nvar _angular2 = _interopRequireDefault(_angular);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar routes = function routes($stateProvider, $urlRouterProvider) {\n  /* @ngInject */\n\n  $stateProvider.state('login', {\n    url: '/login',\n    component: 'loginComponent'\n  });\n\n  $stateProvider.state('edit', {\n    url: '/edit',\n    component: 'editComponent'\n  });\n\n  $stateProvider.state('main', {\n    url: '/main',\n    component: 'mainComponent'\n  });\n\n  $stateProvider.state('result', {\n    url: '/result',\n    component: 'resultComponent'\n  });\n\n  $urlRouterProvider.otherwise('main');\n};\n\nexports.default = routes;\n\n\n/** WEBPACK FOOTER **\n ** ./app/routes/routes.js\n **/","import angular from 'angular';\r\n\r\nconst routes = function($stateProvider, $urlRouterProvider) {\r\n  /* @ngInject */\r\n\r\n  $stateProvider\r\n    .state('login', {\r\n      url: '/login',\r\n      component: 'loginComponent'\r\n  });\r\n\r\n  $stateProvider\r\n    .state('edit', {\r\n      url: '/edit',\r\n      component: 'editComponent'\r\n  });\r\n\r\n  $stateProvider\r\n    .state('main', {\r\n      url: '/main',\r\n      component: 'mainComponent'\r\n  });\r\n\r\n  $stateProvider\r\n    .state('result', {\r\n      url: '/result',\r\n      component: 'resultComponent'\r\n  });\r\n\r\n  $urlRouterProvider.otherwise('main');\r\n}\r\n\r\nexport default routes;\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./app/routes/routes.js\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _angular = require('angular');\n\nvar _angular2 = _interopRequireDefault(_angular);\n\nvar _constants = require('../constants/constants');\n\nvar _constants2 = _interopRequireDefault(_constants);\n\nvar _firebase = require('firebase');\n\nvar _firebase2 = _interopRequireDefault(_firebase);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar services = _angular2.default.module('services', ['firebase']).factory('Auth', ['$firebaseAuth', function ($firebaseAuth) {\n    _firebase2.default.initializeApp(_constants2.default);\n    return $firebaseAuth();\n}]).name;\n\nexports.default = services;\n\n\n/** WEBPACK FOOTER **\n ** ./app/services/services.js\n **/","import angular from 'angular';\r\nimport constants from '../constants/constants';\r\nimport firebase from 'firebase';\r\n\r\nconst services = angular.module('services', ['firebase'])\r\n\r\n.factory('Auth', ['$firebaseAuth', function($firebaseAuth) {\r\n    firebase.initializeApp(constants);\r\n    return $firebaseAuth();\r\n  }\r\n])\r\n\r\n.name;\r\n\r\nexport default services;\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./app/services/services.js\n **/"],"sourceRoot":""}